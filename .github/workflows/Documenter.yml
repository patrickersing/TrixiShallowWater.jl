name: Documentation

on:
  push:
    branches:
      - 'main'
    tags: '*'
    paths-ignore:
      - '.zenodo.json'
      - '.github/workflows/ci.yml'
      - '.github/workflows/CompatHelper.yml'
      - '.github/workflows/TagBot.yml'
  pull_request:
    paths-ignore:
      - '.zenodo.json'
      - '.github/workflows/ci.yml'
      - '.github/workflows/CompatHelper.yml'
      - '.github/workflows/TagBot.yml'
  workflow_dispatch:

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  build-documentation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
          show-versioninfo: true
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1
        env:
          PYTHON: ""
      - name: Install dependencies
        run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
      # Workaround to test against specific PR (needs to be removed before merging)  
      - name: Checkout Trixi version from PR
        uses: actions/checkout@v4
        with:
          repository: patrickersing/Trixi.jl
          ref: swe_separation
          path: docs/Trixi-PR
      # For debugging purposes
      - name: Print working directory
        run: pwd
      - name: List files in current folder
        run: ls -ll docs
      ######
      - name: Load Trixi version from PR
        shell: julia --color=yes --project=docs/ {0}
        run: |
          using Pkg
          Pkg.develop(PackageSpec(path="docs/Trixi-PR"))
          Pkg.update()
      # end of workaround
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }} # For authentication with SSH deploy key
          GKSwstype: 100 # To make GitHub Action work, disable showing a plot window with the GR backend of the Plots package
        run: julia --project=docs --color=yes docs/make.jl
      - name: Run doctests
        run: |
          julia --project=docs --color=yes -e '
            using Documenter: DocMeta, doctest
            using TrixiShallowWater
            DocMeta.setdocmeta!(TrixiShallowWater, :DocTestSetup, :(using TrixiShallowWater); recursive=true)
            doctest(TrixiShallowWater)'

